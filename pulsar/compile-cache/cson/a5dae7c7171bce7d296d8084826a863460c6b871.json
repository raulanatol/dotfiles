{"name":"TOML","scopeName":"source.toml","fileTypes":["toml"],"patterns":[{"include":"#comment"},{"match":"(?:^\\s*)((\\[\\[)[^\\]]+(\\]\\]))","captures":{"1":{"name":"entity.name.section.table.array.toml"},"2":{"name":"punctuation.definition.table.array.begin.toml"},"3":{"name":"punctuation.definition.table.array.end.toml"}}},{"match":"(?:^\\s*)((\\[)[^\\]]+(\\]))","captures":{"1":{"name":"entity.name.section.table.toml"},"2":{"name":"punctuation.definition.table.begin.toml"},"3":{"name":"punctuation.definition.table.end.toml"}}},{"begin":"([A-Za-z0-9_-]+)\\s*(=)\\s*","beginCaptures":{"1":{"name":"variable.other.key.toml"},"2":{"name":"keyword.operator.assignment.toml"}},"end":"(?!\\G)","patterns":[{"include":"#values"}]},{"begin":"((\")(.*?)(\"))\\s*(=)\\s*","beginCaptures":{"1":{"name":"string.quoted.double.toml"},"2":{"name":"punctuation.definition.string.begin.toml"},"3":{"name":"variable.other.key.toml","patterns":[{"include":"#string-escapes"}]},"4":{"name":"punctuation.definition.string.end.toml"},"5":{"name":"keyword.operator.assignment.toml"}},"end":"(?!\\G)","patterns":[{"include":"#values"}]},{"begin":"((')([^']*)('))\\s*(=)\\s*","beginCaptures":{"1":{"name":"string.quoted.single.toml"},"2":{"name":"punctuation.definition.string.begin.toml"},"3":{"name":"variable.other.key.toml"},"4":{"name":"punctuation.definition.string.end.toml"},"5":{"name":"keyword.operator.assignment.toml"}},"end":"(?!\\G)","patterns":[{"include":"#values"}]}],"repository":{"comment":{"patterns":[{"match":"(#).*$","name":"comment.line.number-sign.toml","captures":{"1":{"name":"punctuation.definition.comment.toml"}}}]},"string-escapes":{"match":"\\\\[btnfr\"\\\\]|\\\\u[A-Fa-f0-9]{4}|\\\\U[A-Fa-f0-9]{8}","name":"constant.character.escape.toml"},"values":{"patterns":[{"begin":"\\[","beginCaptures":{"0":{"name":"punctuation.definition.array.begin.toml"}},"end":"\\]","endCaptures":{"0":{"name":"punctuation.definition.array.end.toml"}},"patterns":[{"include":"#comment"},{"match":",","name":"punctuation.definition.separator.comma.toml"},{"include":"#values"}]},{"begin":"{","beginCaptures":{"0":{"name":"punctuation.definition.table.inline.begin.toml"}},"end":"}","endCaptures":{"0":{"name":"punctuation.definition.table.inline.end.toml"}},"patterns":[{"match":",","name":"punctuation.definition.separator.comma.toml"},{"include":"$self"}]},{"begin":"\"\"\"","beginCaptures":{"0":{"name":"punctuation.definition.string.begin.toml"}},"end":"\"\"\"","endCaptures":{"0":{"name":"punctuation.definition.string.end.toml"}},"name":"string.quoted.double.block.toml","patterns":[{"include":"#string-escapes"},{"match":"\\\\(?=\\s*$)","name":"constant.character.escape.toml"}]},{"begin":"'''","beginCaptures":{"0":{"name":"punctuation.definition.string.begin.toml"}},"end":"'''","endCaptures":{"0":{"name":"punctuation.definition.string.end.toml"}},"name":"string.quoted.single.block.toml"},{"begin":"\"","beginCaptures":{"0":{"name":"punctuation.definition.string.begin.toml"}},"end":"\"","endCaptures":{"0":{"name":"punctuation.definition.string.end.toml"}},"name":"string.quoted.double.toml","patterns":[{"include":"#string-escapes"}]},{"begin":"'","beginCaptures":{"0":{"name":"punctuation.definition.string.begin.toml"}},"end":"'","endCaptures":{"0":{"name":"punctuation.definition.string.end.toml"}},"name":"string.quoted.single.toml"},{"match":"true","name":"constant.language.boolean.true.toml"},{"match":"false","name":"constant.language.boolean.false.toml"},{"include":"#date-time"},{"include":"#numbers"},{"match":".+","name":"invalid.illegal.toml"}]},"date-time":{"patterns":[{"match":"(?x)\n\\d{4}-\\d{2}-\\d{2}               # YYYY-MM-DD\n(T|[ ])                            # T or space\n\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?   # HH:MM:SS.precision\n(?:\n  (Z)\n  |\n  ([+-])\\d{2}:\\d{2}              # +/- HH:MM\n)","name":"constant.numeric.date.toml","captures":{"1":{"name":"keyword.other.time.toml"},"2":{"name":"keyword.other.offset.toml"},"3":{"name":"keyword.other.offset.toml"}}},{"match":"(?x)\n\\d{4}-\\d{2}-\\d{2}               # YYYY-MM-DD\n(T|[ ])                            # T or space\n\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?   # HH:MM:SS.precision","name":"constant.numeric.date.toml","captures":{"1":{"name":"keyword.other.time.toml"}}},{"match":"\\d{4}-\\d{2}-\\d{2}","name":"constant.numeric.date.toml"},{"match":"\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?","name":"constant.numeric.date.toml"}]},"numbers":{"patterns":[{"match":"(?x)\n[+-]?                    # Optional +/-\n(\n  0                      # Just a zero\n  |\n  [1-9](_?\\d)*          # Or a non-zero number (no leading zeros allowed)\n)\n(\\.\\d(_?\\d)*)?        # Optional fractional portion\n([eE][+-]?\\d(_?\\d)*)?  # Optional exponent\n\\b","name":"constant.numeric.toml"},{"match":"[+-]?(inf|nan)\\b","name":"constant.numeric.$1.toml"},{"match":"0x[0-9A-Fa-f](_?[0-9A-Fa-f])*\\b","name":"constant.numeric.hex.toml"},{"match":"0o[0-7](_?[0-7])*\\b","name":"constant.numeric.octal.toml"},{"match":"0b[01](_?[01])*\\b","name":"constant.numeric.binary.toml"}]}}}